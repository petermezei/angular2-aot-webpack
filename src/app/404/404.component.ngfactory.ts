/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './404.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/debug_context';
import * as import3 from '@angular/core/src/render/api';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from './404.component.css.shim';
import * as import10 from '../common/header/header.component';
import * as import11 from '../common/header/header.component.ngfactory';
export class Wrapper_NotFoundPageComponent {
  /*private*/ _eventHandler:Function;
  context:import0.NotFoundPageComponent;
  /*private*/ _changed:boolean;
  constructor() {
    this._changed = false;
    this.context = new import0.NotFoundPageComponent();
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
const nodeDebugInfos_NotFoundPageComponent_Host0:import2.StaticNodeDebugInfo[] = [new import2.StaticNodeDebugInfo([import0.NotFoundPageComponent],import0.NotFoundPageComponent,{})];
var renderType_NotFoundPageComponent_Host:import3.RenderComponentType = import4.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_NotFoundPageComponent_Host0 extends import1.DebugAppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.NotFoundPageComponent>;
  _NotFoundPageComponent_0_3:Wrapper_NotFoundPageComponent;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NotFoundPageComponent_Host0,renderType_NotFoundPageComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_NotFoundPageComponent_Host0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import4.selectOrCreateRenderHostElement(this.renderer,'ng-component',import4.EMPTY_INLINE_ARRAY,rootSelector,this.debug(0,0,0));
    this.compView_0 = new View_NotFoundPageComponent0(this.viewUtils,this,0,this._el_0);
    this._NotFoundPageComponent_0_3 = new Wrapper_NotFoundPageComponent();
    this.compView_0.create(this._NotFoundPageComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._NotFoundPageComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.NotFoundPageComponent) && (0 === requestNodeIndex))) { return this._NotFoundPageComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._NotFoundPageComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const NotFoundPageComponentNgFactory:import8.ComponentFactory<import0.NotFoundPageComponent> = new import8.ComponentFactory<import0.NotFoundPageComponent>('ng-component',View_NotFoundPageComponent_Host0,import0.NotFoundPageComponent);
const styles_NotFoundPageComponent:any[] = [import9.styles];
const nodeDebugInfos_NotFoundPageComponent0:import2.StaticNodeDebugInfo[] = [
  new import2.StaticNodeDebugInfo([import10.HeaderComponent],import10.HeaderComponent,{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{}),
  new import2.StaticNodeDebugInfo(([] as any[]),(null as any),{})
]
;
var renderType_NotFoundPageComponent:import3.RenderComponentType = import4.createRenderComponentType('/home/peter/Desktop/git/angular2-aot-webpack/src/app/404/404.component.html',0,import5.ViewEncapsulation.Emulated,styles_NotFoundPageComponent,{});
export class View_NotFoundPageComponent0 extends import1.DebugAppView<import0.NotFoundPageComponent> {
  _el_0:any;
  compView_0:import1.AppView<import10.HeaderComponent>;
  _HeaderComponent_0_3:import11.Wrapper_HeaderComponent;
  _el_1:any;
  _el_2:any;
  _el_3:any;
  _el_4:any;
  _el_5:any;
  _el_6:any;
  _el_7:any;
  _text_8:any;
  constructor(viewUtils:import4.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_NotFoundPageComponent0,renderType_NotFoundPageComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,nodeDebugInfos_NotFoundPageComponent0);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import4.createRenderElement(this.renderer,parentRenderNode,'pm-header',import4.EMPTY_INLINE_ARRAY,this.debug(0,0,0));
    this.compView_0 = new import11.View_HeaderComponent0(this.viewUtils,this,0,this._el_0);
    this._HeaderComponent_0_3 = new import11.Wrapper_HeaderComponent();
    this.compView_0.create(this._HeaderComponent_0_3.context);
    this._el_1 = import4.createRenderElement(this.renderer,parentRenderNode,'div',new import4.InlineArray2(2,'class','container notFoundModule'),this.debug(1,0,23));
    this._el_2 = import4.createRenderElement(this.renderer,this._el_1,'div',new import4.InlineArray2(2,'class','row'),this.debug(2,0,61));
    this._el_3 = import4.createRenderElement(this.renderer,this._el_2,'div',new import4.InlineArray2(2,'class','col-md-12'),this.debug(3,0,78));
    this._el_4 = import4.createRenderElement(this.renderer,this._el_3,'div',new import4.InlineArray2(2,'class','box'),this.debug(4,0,101));
    this._el_5 = import4.createRenderElement(this.renderer,this._el_4,'div',new import4.InlineArray2(2,'class','icon'),this.debug(5,0,118));
    this._el_6 = import4.createRenderElement(this.renderer,this._el_5,'i',new import4.InlineArray4(4,'area-hidden','area-hidden','class','fa fa-frown-o'),this.debug(6,0,136));
    this._el_7 = import4.createRenderElement(this.renderer,this._el_4,'h1',import4.EMPTY_INLINE_ARRAY,this.debug(7,0,197));
    this._text_8 = this.renderer.createText(this._el_7,'Page not found',this.debug(8,0,201));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._el_1,
      this._el_2,
      this._el_3,
      this._el_4,
      this._el_5,
      this._el_6,
      this._el_7,
      this._text_8
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import10.HeaderComponent) && (0 === requestNodeIndex))) { return this._HeaderComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.debug(0,0,0);
    this._HeaderComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
}